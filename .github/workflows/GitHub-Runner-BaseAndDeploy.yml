name: GitHub-Runner - Base And Deploy
on:
  workflow_dispatch:

jobs:

  github-runner-base:
    runs-on: ubuntu-latest
    steps:

      - name: Copy Repo Files
        uses: actions/checkout@master

      - name: Get GitHub organization or user and set variable for docker image creation
        run: |
          VAR_ORG=$(dirname ${GITHUB_REPOSITORY})
          VAR_ORG_LCASE=$(echo $VAR_ORG | tr [:upper:] [:lower:])
          echo 'ORG='$VAR_ORG_LCASE >> $GITHUB_ENV
          echo 'ORG='$VAR_ORG_LCASE

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_SECRET }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.base
          pull: true
          push: true
          tags: ${{ env.ORG }}/github-runner-base:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  github-runner-deploy:
    runs-on: ubuntu-latest
    needs: github-runner-base
    steps:

      - name: Copy Repo Files
        uses: actions/checkout@master

      - name: Get GitHub organization or user and set variable for docker image creation
        run: |
          VAR_ORG=$(dirname ${GITHUB_REPOSITORY})
          VAR_ORG_LCASE=$(echo $VAR_ORG | tr [:upper:] [:lower:])
          echo 'ORG='$VAR_ORG_LCASE >> $GITHUB_ENV
          echo 'ORG='$VAR_ORG_LCASE

      - name: Run curl request to get the runner version
        run: |
          echo "VERSION=$(curl 'https://api.github.com/repos/actions/runner/releases/latest' | jq '.name' | tr -d '"' | tr -d 'v')" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.deploy
          pull: true
          push: true
          tags: ${{ env.ORG }}/github-runner:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: 
            GHVERSION=${{ env.VERSION }}